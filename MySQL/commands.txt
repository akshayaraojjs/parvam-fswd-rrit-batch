DBMS - Database Management System
2 Types:
RDBMS / SQL: Tables
Name    Email             Phone
Akshay  akshay@gmail.com  8217751557
Ajay    ajay@gmail.com    8218851557

 (Ex: MySQL, Oracle SQL, PostgreSQL, SQLite)

NoSQL: Object/JSON 
{
    [
        name: "Akshay",
        email: "akshay@gmail.com"
        phone: 8217751557
    ],
    [
        name: "Ajay",
        email: "ajay@gmail.com"
        phone: 8218851557
    ]
}

(Ex: MongoDB, Firebase)

SQL - Language used for working with Database (Structured Query Language)
Table: Collection of Rows & Columns
Database: Collection of Tables
Primary Key: It is a unique key which should be not repeated. (Int)

Datatypes:
int, tinyint, bigint, decimal(range), enum('value1','value2'), varchar(size), date, datetime, timestamp, time

Queries:
1) Creating a DB:
Syntax: Create Database db_name;
Ex: CREATE DATABASE practice;

2) Creating a table:
Syntax: Create Tale table_name(
    column1 datatype1, 
    column2 datatype2, 
    column3 datatype3, 
    column4 datatype4, 
);

Ex: Create Table Student(
    id int Not Null AUTO_INCREMENT,
    name varchar(50),
    email varchar(50),
    phone varchar(10),
    branch varchar(20),
    sem int,
    section varchar(1),
    college varchar(50),
    Primary Key(id)
);

3) Removing the Table:
Syntax: Drop Table table_name;
Ex: Drop Table student;

4) Removing the Database:
Syntax: Drop Database db_name;
Ex: Drop Table practice;

5) Modify the Table Structure:
Alter Query:
    1) Add New Column
    2) Remove Old Column
    3) Modify Existing Column

1) Add Column:
Syntax:
ALTER TABLE table_name 
ADD column_name datatype;

Ex: Alter Table student
Add gender enum('male', 'female', 'others') 
AFTER phone;

Alter Table student
Add weight decimal(5,2) Ex: 100.80
AFTER name;

Alter Table student
Add DOB date;

Alter Table student
Add birth_time datetime;

Alter Table student
Add created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

Date Format - yyyy-mm-dd
Time Format - hh-mm-ss
Date Time & Timestamp Format: yyyy-mm-dd hh:mm:ss

2) Drop Column:
Syntax:
ALTER TABLE table_name 
DROP column_name;

Ex: Alter table student
DROP gender;

3) Modify Column:
Syntax:
ALTER TABLE table_name 
Change column_name column_name datatype;

Resizing:
ALTER TABLE student 
CHANGE name name VARCHAR(100);

Renaming the column:
Alter Table student
change name full_name varchar(100);

Alter Table student
change DOB date_of_birth date;

6) Inserting Data into the table:
Insert Query:
Syntax:
Insert into table_name ("column1", "column2", ...) Values ("value1", "value2", ...)

Single Insertion:
INSERT INTO `student`(`full_name`, `date_of_birth`, `weight`, `email`, `phone`) VALUES ('Akshay',2001-05-15,85.35,'akshay@gmail.com','8217751557')

Bulk / Multiple Insertion:
INSERT INTO `student`(`full_name`, `date_of_birth`, `weight`, `email`, `phone`) VALUES 
('Sudeep',2003-05-15,65.35,'sudeep@gmail.com','8217751557'), 
('Ajay',2002-05-15,75.35,'akshay@gmail.com','8218851557' ); 

Syntax:
Update Functionality:
Update table_name set column = "value" where condition;

Update student set full_name = "Akshay Rao" where full_name = "Akshay";

UPDATE student SET date_of_birth = "2025-05-01" where full_name = "Chiranth";

Fetching Data:
* denotes all columns

SELECT * FROM `student`;

SELECT * FROM `student` WHERE gender = "male"

SELECT * FROM `student` WHERE gender = "female"

SELECT full_name, date_of_birth FROM `student` WHERE gender = "Male"

SELECT full_name, gender, date_of_birth FROM `student` WHERE date_of_birth > "2003-01-01"

SELECT * FROM `student` WHERE branch = "ECE" and sem = 6

SELECT * FROM `student` WHERE branch = "ECE" and sem = 6 LIMIT 5;

SELECT * FROM `student` WHERE branch = "ECE" and sem = 6 ORDER by full_name ASC LIMIT 5;

SELECT * FROM `student` WHERE branch = "ECE" and sem = 6 ORDER by full_name DESC LIMIT 5;

SELECT COUNT(*) FROM `student` WHERE branch = "ECE" and sem = 6;

Starting with "A":
SELECT * FROM `student` WHERE full_name LIKE "A%";

Ending with "A":
SELECT * FROM `student` WHERE full_name LIKE "%A";

Words contain with "An":
SELECT * FROM `student` WHERE full_name LIKE "%an%";

Checking the character position:
SELECT * FROM `student` WHERE full_name LIKE "_a%"

SELECT * FROM `student` WHERE full_name LIKE "_ar%"

Starting & ending with "A":
SELECT * FROM `student` WHERE full_name LIKE "A%A"

Wildcard Characters in MySQL: "%" & "_":
%	Represents zero or more characters
_	Represents a single character

To check in group, we use "In" keyword:
SELECT * FROM `student` WHERE branch In ("EEE", "IT", "ECE")

Between:
SELECT full_name, weight, branch FROM `student` WHERE weight BETWEEN 50 and 55

SELECT full_name, weight, branch FROM `student` WHERE date_of_birth BETWEEN "2001-01-01" and "2001-06-30"

Negative Between (Not Between):
SELECT full_name, weight, branch FROM `student` WHERE date_of_birth NOT BETWEEN "2001-01-01" and "2001-06-30"

Average:
SELECT AVG(weight) FROM `student`

Sum:
SELECT SUM(weight) FROM `student`

Combination:
SELECT COUNT(weight), SUM(weight), AVG(weight) FROM `student`

Max:
SELECT full_name, MAX(weight) FROM `student`

Delete Data:

delete from table_name where condition;

delete from student WHERE full_name = "Sudeep";

